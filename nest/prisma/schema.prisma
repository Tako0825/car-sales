generator client {
  provider = "prisma-client-js"
  previewFeatures = ["typedSql"] // modelCase 打开
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model inventory {
  id          Int       @id @default(autoincrement())
  productId   Int
  warehouseId Int
  quantity    Int       @db.UnsignedInt
  product     product   @relation(fields: [productId], references: [id], map: "Inventory_productId_fkey")
  warehouse   warehouse @relation(fields: [warehouseId], references: [id], map: "Inventory_warehouseId_fkey")

  @@index([productId], map: "Inventory_productId_fkey")
  @@index([warehouseId], map: "Inventory_warehouseId_fkey")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model order {
  id          Int       @id @default(autoincrement())
  productId   Int
  userId      Int
  warehouseId Int
  createtime  DateTime  @default(now())
  product     product   @relation(fields: [productId], references: [id], map: "Order_productId_fkey")
  user        user      @relation(fields: [userId], references: [id], map: "Order_userId_fkey")
  warehouse   warehouse @relation(fields: [warehouseId], references: [id], map: "Order_warehouseId_fkey")

  @@index([productId], map: "Order_productId_fkey")
  @@index([userId], map: "Order_userId_fkey")
  @@index([warehouseId], map: "Order_warehouseId_fkey")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model product {
  id        Int         @id @default(autoincrement())
  name      String
  model     String
  price     Float
  introduce String      @db.Text
  poster    String      @default("")
  inventory inventory[]
  order     order[]
  supply    supply[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model supplier {
  id      Int      @id @default(autoincrement())
  name    String
  phone   String   @unique(map: "Supplier_phone_key") @db.VarChar(11)
  company String
  supply  supply[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model supply {
  id          Int       @id @default(autoincrement())
  quantity    Int
  supplierId  Int
  productId   Int
  warehouseId Int
  createtime  DateTime  @default(now())
  product     product   @relation(fields: [productId], references: [id], map: "Supply_productId_fkey")
  supplier    supplier  @relation(fields: [supplierId], references: [id], map: "Supply_supplierId_fkey")
  warehouse   warehouse @relation(fields: [warehouseId], references: [id], map: "Supply_warehouseId_fkey")

  @@index([productId], map: "Supply_productId_fkey")
  @@index([supplierId], map: "Supply_supplierId_fkey")
  @@index([warehouseId], map: "Supply_warehouseId_fkey")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model user {
  id          Int       @id @default(autoincrement())
  username    String
  password    String
  phone       String    @unique(map: "User_phone_key") @db.VarChar(11)
  role        user_role @default(USER)
  address     String    @default("这个家伙很神秘, 还没有留下任何地址哦~")
  avatar      String    @default("https://cube.elemecdn.com/0/88/03b0d39583f48206768a7534e55bcpng.png")
  joined_date DateTime  @default(now())
  order       order[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model warehouse {
  id        Int         @id @default(autoincrement())
  location  String
  inventory inventory[]
  order     order[]
  supply    supply[]
}

enum user_role {
  USER
  ADMIN
  ROOT
}
